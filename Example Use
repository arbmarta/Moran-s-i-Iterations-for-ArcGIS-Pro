import arcpy
import pandas as pd

# Specify feature class and fields
feature_classes = ["WPG", "Reg", "Leth", "Calg", "Edm"]
fields = [
    "CTUID_Dataset_Median_Diameter__cm_", 
    "CTUID_Dataset_Trees_per_Hectare", 
    "CTUID_Dataset_Basal_Area_per_Hectare__m_", 
    "CTUID_Dataset_Ash_Count", 
    "CTUID_Dataset_Ash_Proportion", 
    "CTUID_Dataset_Elm_Count", 
    "CTUID_Dataset_Elm_Proportion", 
    "CTUID_Dataset_Non_Resistant_Elm_Count", 
    "CTUID_Dataset_Non_Resistant_Elm_Proportion", 
    "CTUID_Dataset_Resistant_Elm_Count", 
    "CTUID_Dataset_Resistant_Elm_Proportion"
]

# Construct a dataframe to hold the values
results_df = pd.DataFrame(columns=["FeatureClass", "Field", "MoransI", "ZScore", "PValue"])

# Iterate through the options
for feature_class in feature_classes:
    for field in fields:
        result = arcpy.stats.SpatialAutocorrelation(feature_class, field, "NO_REPORT", "INVERSE_DISTANCE_SQUARED", "EUCLIDEAN_DISTANCE", "ROW", "10000")
        moransI = result.getOutput(0)
        zScore = result.getOutput(1)
        pValue = result.getOutput(2)

        # Append results to the DataFrame
        results_df = results_df.append({"FeatureClass": feature_class, 
                                        "Field": field, 
                                        "MoransI": moransI, 
                                        "ZScore": zScore, 
                                        "PValue": pValue}, 
                                       ignore_index=True)

# Print to a CSV
output_csv = r"{file path}" 
results_df.to_csv(output_csv, index=False)
print("Analysis complete and results stored in " + output_csv)
